$Resize:Stretch
Screen _NewImage(320, 200, 32), 0, 0, 1
_Font 8
' qb graphics settings ^^

f = FreeFile ' unused file access number, kinda weird way of doing it
' On Error GoTo 10


Type sounds
    door As Long
    money As Long ' haha
    gameplay_music As Long
    enemydeath As Long
    flameball As Long
    getHurt As Long
    gameOver_music As Long

    titleMusic As Long
    endMusic As Long
End Type

Type screenCards
    endCard As Long
    logo As Long
    tutorial As Long
    lore As Long
    gameOver As Long
    last As Long
End Type

Type enemy
    ttl As Integer ' countdown timer decides how long it waits before the next move
    alive As Integer
End Type

Type flame
    xdir As Integer
    ydir As Integer
    status As Integer
    ttl As Integer
    power As Integer
End Type


Type gameType
    state As Integer ' new element to control the game state
    money As Integer
    enemies As Integer
    power As Integer
    hp As Integer
    keys As Integer
    ' switch not needed anymore
End Type

Type graphics
    dragon As Long
    bricks As Long
    money As Long ' lol
    hero As Long
    door As Long
    flame As Long
    proj As Long
    spike As Long
    nextt As Long
End Type
' game types ^

Dim Shared map(50, 50) As Integer
Dim Shared dragon& ' as LONG
Dim Shared keyhit& ' as LONG
Dim Shared level As Integer

level = 0
Dim Shared sfx As sounds
Dim Shared gfx As graphics
Dim Shared graphics_cards As screenCards
Dim Shared game As gameType

Dim Shared enemies(50, 50) As enemy
Dim Shared flames(50, 50) As flame
Dim Shared projectiles(50, 50) As flame
Dim Shared spikes(50, 50) As flame


Dim Shared camx As Integer
Dim Shared camy As Integer
Dim Shared px As Integer
Dim Shared py As Integer
Dim Shared dx As Integer
Dim Shared dy As Integer


Call killAllEnemies
Call loadAllSounds
Call loadAllGraphics




' i actually hate this
'$include:'world.bas'
'$include:'world2.bas'
'$include:'world3.bas'
' tho i don't have a cleaner solution atm.
' THEY CONTAIN BIG DATA STATEMENTS FOR THE LEVELS, GENERATED BY A PROGRAM


'https://youtu.be/-vqQGdh2KmM


'Print titleMusic&




game.state = 0


' old game loop
'Do


'titleSelect = runTitle
'Select Case titleSelect
'    Case 1
'Call runGame

'    Case 2
'Call runTutorial

'End Select


'' run the title screen

'Loop


Do
    Select Case game.state
        Case 0
            titleSelect = runTitle
            ' render title screen
            ' get input
            ' process input
        Case 1
            ' render/update gameplay
            ' get input
            ' process input

    End Select
    PCopy 0, 1
    _Delay .01
Loop


Sleep

System



Sub runGame
    Call restartGame
    Call findPlayerOnMap
    _SndVol sfx.gameplay_music, .1
    _SndLoop sfx.gameplay_music 'disabled for now

    Do
        Call renderAndRunVisibleObjects
        Call renderGui
        Call keyHandle

        PCopy 0, 1

        Sleep

    Loop

End Sub

Sub keyHandle
    ' get key inpus and deal with them
    dx = 0
    dy = 0
    keyhit& = _KeyHit
    'k$ = InKey$
    Select Case keyhit&
        ' directional inputs
        Case 100:
            dx = 1

        Case 119:
            dy = -1
        Case 115:
            dy = 1
        Case 97:
            dx = -1
            ' shooting inputs

        Case 106: 'j
            fdx = -1
            fdy = 0
            fireBallSpawn fdx, fdy
        Case 108: 'l
            fdx = 1
            fdy = 0
            fireBallSpawn fdx, fdy

        Case 105: 'i
            fdy = -1
            fdx = 0
            fireBallSpawn fdx, fdy
        Case 107: 'k
            fdy = 1
            fdx = 0
            fireBallSpawn fdx, fdy

    End Select
    keyhit& = 0
    _KeyClear

    Select Case map(px + dx, py + dy)
        Case 9
            level = level + 1
            Call restartGame
        Case 0
            Call marchForth
        Case 2
            map(px + dx, py + dy) = 0
            game.money = game.money + 1
            _SndVol sfx.money, 0.3
            _SndPlay sfx.money
            Call marchForth

        Case 3
            map(px + dx, py + dy) = 0
            _SndVol sfx.door, .2
            _SndPlay sfx.door
            Call marchForth


    End Select

    camx = px - 7
    camy = py - 5


End Sub


Sub marchForth
    map(px, py) = 0
    px = px + dx
    py = py + dy
    map(px, py) = 4


End Sub



Sub fireBallSpawn (fdx, fdy)
    flames(px + fdx, py + fdy).status = 1
    flames(px + fdx, py + fdy).xdir = fdx
    flames(px + fdx, py + fdy).ydir = fdy
    flames(px + fdx, py + fdy).power = 5
    _SndVol sfx.flameball, .3
    _SndPlay sfx.flameball
End Sub


Sub renderGui
    Line (240, 0)-(240, 200), 15
    Color _RGB(255, 255, 255)
    Locate 1, 32: Print "DRAGON"
    Locate 2, 32: Print "SAVIOR"
    Color _RGB(100, 255, 100)
    Locate 4, 32: Print "MONEY"
    Locate 5, 33: Print "$" + Str$(game.money)

    Color _RGB(255, 10, 100)
    Locate 10, 32: Print "HEALTH"
    Locate 11, 33: Print "" + Str$(game.hp)


    Color _RGB(100, 100, 100)
    Locate 13, 32: Print "LEVEL"
    Locate 14, 33: Print "" + Str$(level + 1)
    Line (0, 0)-(15 * 16, 11 * 16), _RGB(255, 255, 255), B
End Sub




Sub renderAndRunVisibleObjects ()
    Cls
    For y = 0 To 10
        For x = 0 To 14
            If (x + camx >= 0) And (x + camx < 50) And (y + camy >= 0) And (y + camy < 50) Then
                enemy = 0
                mapItem = map(x + camx, (y + camy))
                enemy = enemies(x + camx, (y + camy)).alive
                flame = flames(x + camx, y + camy).status
                projectile = projectiles(x + camx, y + camy).status
                spike = spikes(x + camx, y + camy).status

                Select Case mapItem
                    Case 1
                        _PutImage (x * 16, y * 16), gfx.bricks
                    Case 4
                        _PutImage (x * 16, y * 16), gfx.dragon
                    Case 2
                        _PutImage (x * 16, y * 16), gfx.money
                    Case 3
                        _PutImage (x * 16, y * 16), gfx.door
                    Case 7
                        _PutImage (x * 16, y * 16), gfx.hero
                    Case 9
                        _PutImage (x * 16, y * 16), gfx.nextt
                End Select

                If enemy = 1 Then
                    _PutImage (x * 16, y * 16), gfx.hero
                    Call enemyRun
                End If

                If flame = 1 Then
                    _PutImage (x * 16, y * 16), gfx.flame
                    Call updateFlame
                End If

                If projectile = 1 Then
                    _PutImage (x * 16, y * 16), gfx.proj
                    Call projUpdate
                End If


                If spike = 1 Then
                    _PutImage (x * 16, y * 16), gfx.spike
                    Call spikeUpdate
                End If


            End If
        Next x
    Next y


End Sub



Sub spikeUpdate ()
    sx = x + camx
    sy = y + camy
    xdir = spikes(sx, sy).xdir
    ydir = spikes(sx, sy).ydir

    If sx = px And sy = py Then
        _SndVol sfx.getHurt, .4
        _SndPlay sfx.getHurt
        game.hp = game.hp - 10
        spikes(sx, sy).status = 0
        Return
    End If
    If spikes(sx, sy).ttl = 0 Then
        'spikes(sx,sy)
        If map(sx, sy) > 0 Then
            xdir = xdir * -1
            ydir = ydir * -1
        End If

        If spikes(sx + xdir, sy + ydir).status = 1 Then
            xdir = xdir * -1
            ydir = ydir * -1

        End If

        If spikes(sx + xdir, sy + ydir).status = 0 Then
            spikes(sx + xdir, sy + ydir).status = 1
            spikes(sx + xdir, sy + ydir).xdir = xdir
            spikes(sx + xdir, sy + ydir).ydir = ydir
            spikes(sx + xdir, sy + ydir).ttl = 10
            spikes(sx, sy).status = 0
        End If
    Else
        spikes(sx, sy).ttl = spikes(sx, sy).ttl - 1
    End If

End Sub

Sub projUpdate ()
    zx = x + camx
    zy = y + camy
    xdir = projectiles(zx, zy).xdir
    ydir = projectiles(zx, zy).ydir


    If px = zx And py = zy Then
        _SndVol sfx.getHurt, .4
        _SndPlay sfx.getHurt

        game.hp = game.hp - 1
        projectiles(zx, zy).status = 0

    End If
    If map(zx, zy) = 1 Then
        projectiles(zx, zy).status = 0
        Return
    End If

    If projectiles(zx, zy).ttl = 0 Then
        projectiles(zx + xdir, zy + ydir).status = 1
        projectiles(zx + xdir, zy + ydir).xdir = xdir
        projectiles(zx + xdir, zy + ydir).ydir = ydir
        projectiles(zx + xdir, zy + ydir).ttl = 7
        projectiles(zx + xdir, zy + ydir).power = projectiles(zx + xdir, zy + ydir).power - 1
        projectiles(zx, zy).status = 0
        projectiles(zx, zy).power = 0
        If projectiles(zx + xdir, zy + ydir).power = 0 Then
            projectiles(zx + xdir, zy + ydir).status = 0
        End If
    Else
        projectiles(zx, zy).ttl = projectiles(zx, zy).ttl - 1
    End If

End Sub

Sub updateFlame ()
    fx = x + camx
    fy = y + camy
    xdir = flames(fx, fy).xdir
    ydir = flames(fx, fy).ydir

    If map(fx, fy) = 1 Then
        flames(fx, fy).status = 0
        Return
    End If


    If flames(fx, fy).ttl = 0 Then

        flames(fx + xdir, fy + ydir).status = 1
        flames(fx + xdir, fy + ydir).xdir = xdir
        flames(fx + xdir, fy + ydir).ydir = ydir
        flames(fx + xdir, fy + ydir).ttl = 5
        flames(fx + xdir, fy + ydir).power = flames(fx, fy).power - 1
        flames(fx, fy).status = 0
        flames(fx, fy).power = 0
        If flames(fx + xdir, fy + ydir).power = 0 Then
            flames(fx + xdir, fy + ydir).status = 0
        End If
    Else
        flames(fx, fy).ttl = flames(fx, fy).ttl - 1
    End If

End Sub



Sub enemyRun
    ex = x + camx
    ey = y + camy


    If px = ex And py = ey Then
        _SndVol sfx.getHurt, .4
        _SndPlay sfx.getHurt
        game.hp = game.hp - 2
        game.power = game.power + 1
        enemies(ex, ey).alive = 0
    End If



    dx = Int(Rnd * 3) - 1
    dy = 0
    If dx = 0 Then
        dy = Int(Rnd * 3) - 1
    End If

    If flames(ex, ey).status = 1 Then
        _SndVol sfx.enemydeath, 0.3
        _SndPlay sfx.enemydeath
        enemies(ex, ey).alive = 0
        enemies(ex, ey).ttl = 0
        flames(ex, ey).status = 0
        If Int(Rnd * 4) = 2 Then
            map(ex, ey) = 2
        End If
        Return
    End If

    If enemies(ex, ey).ttl = 0 Then
        If map(ex + dx, ey + dy) = 0 And enemies(ex + dx, ey + dy).alive = 0 Then
            enemies(ex + dx, ey + dy).alive = 1
            enemies(ex + dx, ey + dy).ttl = Int(Rnd * 10) + 25
            enemies(ex, ey).alive = 0
            enemies(ex, ey).ttl = 0
            If Int(Rnd * 10) = 1 Then
                projectiles(ex, ey).status = 1
                projectiles(ex, ey).xdir = dx * -1
                projectiles(ex, ey).ydir = dy * -1
                projectiles(ex, ey).ttl = 15
                projectiles(ex, ey).power = 15
            End If

        End If
    Else
        enemies(ex, ey).ttl = enemies(ex, ey).ttl - 1
    End If

End Sub


Sub runTutorial
    Call todo

End Sub



Sub findPlayerOnMap
    px = -1
    py = -1
    For y = 0 To 49
        For x = 0 To 49
            If map(x, y) = 4 Then
                camx = x - 7
                camy = y - 5
                px = x
                py = y
            End If
        Next x
    Next y
End Sub

Sub todo
    Cls
    Print "workin on it"
    PCopy 0, 1
    Sleep
End Sub

Sub restartGame
    For y = 0 To 49
        For x = 0 To 49
            map(x, y) = 0
            spikes(x, y).status = 0
            enemies(x, y).alive = 0
        Next x
    Next y

    game.money = 0
    game.hp = 20
    game.power = 10

    x = 0
    y = 0
    camx = 10
    camy = 4
    If level = 0 Then Restore level1
    If level = 1 Then Restore level2
    If level = 2 Then Restore level3
    ' If level = 3 Then GoTo ending
    ' On Error GoTo 10 ' if it runs out of levels then restart?? the fuck is this
    For y = 0 To 49
        For x = 0 To 49
            Read g

            If g = 8 Then
                spikes(x, y).status = 1
                spikes(x, y).ttl = 10
                xdir = Int(Rnd * 3) - 1
                ydir = 0
                If xdir = 0 Then ydir = (-1) ^ (Int(Rnd * 2))
                spikes(x, y).xdir = xdir
                spikes(x, y).ydir = ydir
            ElseIf g = 7 Then
                enemies(x, y).alive = 1
                enemies(x, y).ttl = 10

            Else
                map(x, y) = g
            End If

        Next x


    Next y
End Sub

Function runTitle
    _SndVol sfx.titleMusic, .1
    _SndLoop sfx.titleMusic

    Do
        escapeCondition = 0
        Do
            Call renderTitle
            _Delay .1

            k$ = InKey$
        Loop Until k$ <> ""
        Select Case k$
            Case "p"
                escapeCondition = 1 'GoTo game
            Case "t"
                escapeCondition = 2 ' GoTo tutorial
        End Select

    Loop Until escapeCondition <> 0
    _SndStop sfx.titleMusic
    runTitle = escapeCondition
End Function

Sub renderTitle ()
    Cls
    _PutImage (0, 0), graphics_cards.logo&
    Print
    Print " PUSH P TO PLAY!"
    Print " PUSH T FOR TUTORIAL!"
    Locate 19, 25: Print "K. JASEY"
    Locate 20, 25: Print "2022"
    PCopy 0, 1


End Sub

Sub loadAllGraphics
    gfx.dragon = _LoadImage("graphics\dragon.png")
    gfx.bricks = _LoadImage("graphics\bricks.png")
    gfx.money = _LoadImage("graphics\money.png")
    gfx.hero = _LoadImage("graphics\hero.png")
    gfx.door = _LoadImage("graphics\door.png")
    gfx.flame = _LoadImage("graphics\flameball.png")
    gfx.proj = _LoadImage("graphics\poisonrock.png")
    gfx.spike = _LoadImage("graphics\spike.png")
    gfx.nextt = _LoadImage("graphics\next.png")

    graphics_cards.gameOver = _LoadImage("graphics\gameOver.png")
    graphics_cards.endCard = _LoadImage("graphics\endCard.png")
    graphics_cards.logo = _LoadImage("graphics\logo.bmp")
    graphics_cards.tutorial = _LoadImage("graphics\tutorial.png")
    graphics_cards.lore = _LoadImage("graphics\lore.png")
    graphics_cards.last = _LoadImage("graphics\lastimg.png")
End Sub

Sub loadAllSounds
    sfx.door = _SndOpen("audio\door.wav")
    sfx.money = _SndOpen("audio\money.wav")
    sfx.enemydeath = _SndOpen("audio\enemy_death.wav")
    sfx.gameplay_music = _SndOpen("audio\dragon world.wav")
    sfx.flameball = _SndOpen("audio\flameBall.wav")
    sfx.getHurt = _SndOpen("audio\getHurt.wav")
    sfx.gameOver_music = _SndOpen("audio\funk.wav")
    sfx.titleMusic = _SndOpen("audio\dragon_savior_title.wav")
    sfx.endMusic = _SndOpen("audio\talk the talk.wav")
End Sub

Sub killAllEnemies
    For x = 0 To 49
        For y = 0 To 49
            enemies(x, y).alive = 0
        Next y
    Next x
End Sub


